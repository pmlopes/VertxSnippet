{
  "verticle": {
    "prefix": "nv",
    "body": [
      "/// <reference types="@vertx/core/runtime" />",
      "// @ts-check",
      "",
      "$0"
    ],
    "description": "new verticle"
  },

  "web-route-handler": {
    "prefix": "wrh",
    "body": [
      "${1:app}.${2|get,post,put,patch,delete,options,head,trace,connect,route|}('$3').handler(function (${4:ctx}) {",
      "\t$0",
      "});"
    ],
    "description": "vert.x web route"
  },

  "create-http-server": {
    "prefix": "chs",
    "body": [
      "vertx",
      "\t.createHttpServer(",
      "\t\tnew HttpServerOptions()",
      "\t\t\t.setSsl(${1/true/true)\n\t\t\t.setPemKeyCertOptions(\n\t\t\t\tnew PemKeyCertOptions()\n\t\t\t\t\t\\/\\/ TODO: Get a SSL Certificate\n\t\t\t\t\t.setKeyPath('server-key.pem')\n\t\t\t\t\t.setCertPath('server-cert.pem')/})",
      "\t\t\t// ALPN + SSL == HTTP2",
      "\t\t\t.setUseAlpn(${2|false,true|}))",
      "\t.requestHandler(function (req) {",
      "\t\t$0",
      "\t})",
      "\t.listen(${4:8000});"
    ],
    "description": "vert.x http(S/2) server"
  },

  "pg-pool": {
    "prefix": "pgp",
    "body": [
      "PgClient.pool(",
      "\tvertx,",
      "\tnew PgPoolOptions()",
      "\t\t.setCachePreparedStatements({1|true,false|})",
      "\t\t.setMaxSize(${2:1})",
      "\t\t.setHost('$3')",
      "\t\t.setUser('${4:postgres}')",
      "\t\t.setPassword('${5:postgres}')",
      "\t\t.setDatabase('$0'));"
    ],
    "description": "pg-client pool"
  }
}
