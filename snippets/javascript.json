{
  "router-get": {
    "prefix": "router-get",
    "body": [
      "router.get('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP GET request to a handler"
  },
  "router-head": {
    "prefix": "router-head",
    "body": [
      "router.head('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP HEAD request to a handler"
  },
  "router-options": {
    "prefix": "router-options",
    "body": [
      "router.options('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP OPTIONS request to a handler"
  },
  "router-put": {
    "prefix": "router-put",
    "body": [
      "router.put('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP PUT request to a handler"
  },
  "router-post": {
    "prefix": "router-post",
    "body": [
      "router.post('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP POST request to a handler"
  },
  "router-delete": {
    "prefix": "router-delete",
    "body": [
      "router.delete('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP DELETE request to a handler"
  },
  "router-trace": {
    "prefix": "router-trace",
    "body": [
      "router.trace('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP TRACE request to handler"
  },
  "router-connect": {
    "prefix": "router-connect",
    "body": [
      "router.connect('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP CONNECT request to a handler"
  },
  "router-patch": {
    "prefix": "router-patch",
    "body": [
      "router.patch('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes a HTTP PATCH request to a handler"
  },
  "router-route": {
    "prefix": "router-route",
    "body": [
      "router.route('$1').handler(function (${2:ctx}) {\n\t${3}\n});"
    ],
    "description": "Routes any HTTP verb requests to a handler"
  },

  "httpServer": {
    "prefix": "httpServer",
    "body": [
      "vertx.createHttpServer().requestHandler(${1:router}.accept).listen(${2:8080});"
    ],
    "description": "Creates an HTTP Server bounded to a Router"
  },
  "httpsServer": {
    "prefix": "httpsServer",
    "body": [
      "vertx.createHttpServer({",
      "\tssl: true,",
      "\tkeyStoreOptions: {",
      "\t\tpath: '${1:server-keystore.jks}',",
      "\t\tpassword: '$2'",
      "\t}",
      "}).requestHandler(${3:router}.accept).listen(${4:8443});"
    ],
    "description": "Creates an HTTPS Server bounded to a Router"
  },
  "http2Server": {
    "prefix": "http2Server",
    "body": [
      "vertx.createHttpServer({",
      "\tuseAlpn: true,",
      "\tssl: true,",
      "\tpemKeyCertOptions: {",
      "\t\tkeyPath: '${1:server-key.pem}',",
      "\t\tcertPath: '${2:server-cert.pem}'",
      "\t}",
      "}).requestHandler(${3:router}.accept).listen(${4:4443});"
    ],
    "description": "Creates an HTTP2 Server bounded to a Router"
  }
}
