{
  "verticle": {
    "prefix": "nv",
    "body": [
      "package ${1:com.acme};",
      "",
      "import io.vertx.core.*;",
      "import io.vertx.core.http.*;",
      "import io.vertx.core.net.*;",
      "",
      "import io.vertx.ext.web.*;",
      "import io.vertx.ext.web.handler.*;",
      "",
      "public class ${TM_FILENAME_BASE} extends AbstractVerticle {",
      "",
      "\t@Override",
      "\tpublic void start() {",
      "\t\t$3",
      "\t}",
      "}"
    ],
    "description": "new verticle"
  },

  "web-route-handler": {
    "prefix": "wrh",
    "body": [
      "${1:router}.${2|get,post,put,patch,delete,options,head,trace,connect,route|}(\"${3}\").handler(${4:ctx} -> {",
      "\t$0",
      "});"
    ],
    "description": "vert.x web route"
  },

  "create-http-server": {
    "prefix": "chs",
    "body": [
      "vertx",
      "\t.createHttpServer(",
      "\t\tnew HttpServerOptions()",
      "\t\t\t// SSL + ALPN == HTTP2",
      "\t\t\t.setSsl(${1/true/true)\n\t\t\t.setPemKeyCertOptions(\n\t\t\t\tnew PemKeyCertOptions()\n\t\t\t\t\t\\/\\/ TODO: Get a SSL Certificate\n\t\t\t\t\t.setKeyPath(\"server-key.pem\")\n\t\t\t\t\t.setCertPath(\"server-cert.pem\")/})",
      "\t\t\t.setUseAlpn(${2|false,true|}))",
      "\t.requestHandler(req -> {",
      "\t\t$0",
      "\t})",
      "\t.listen(${4:8000});"
    ],
    "description": "vert.x http(S/2) server"
  },

  "pg-pool": {
    "prefix": "pgp",
    "body": [
      "PgClient.pool(",
      "\tvertx,",
      "\tnew PgPoolOptions()",
      "\t\t.setCachePreparedStatements({1|true,false|})",
      "\t\t.setMaxSize(${2:1})",
      "\t\t.setHost(\"$3\")",
      "\t\t.setUser(\"${4:postgres}\")",
      "\t\t.setPassword(\"${5:secret}\")",
      "\t\t.setDatabase(\"$0\"));"
    ],
    "description": "pg-client pool"
  }
}
